{
  "address": "0xAF5F031b8D5F12AD80d5E5f13C99249d82AfFfe2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IOracleAggregator",
          "name": "_oracleAggregator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_emergencyPeriod",
          "type": "uint256"
        },
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "contract FlagsInterface",
          "name": "_chainlinkFlags",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadata",
          "type": "string"
        }
      ],
      "name": "LogMetadataSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "chainlinkFlags",
      "outputs": [
        {
          "internalType": "contract FlagsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        }
      ],
      "name": "emergencyCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getResult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleAggregator",
      "outputs": [
        {
          "internalType": "contract IOracleAggregator",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract FlagsInterface",
          "name": "_chainlinkFlags",
          "type": "address"
        }
      ],
      "name": "setChainlinkFlags",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newEmergencyPeriod",
          "type": "uint256"
        }
      ],
      "name": "setEmergencyPeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6cf09ad562f1d2842fb5615534cb10d5c2610f98b371ffd40a5ebc842d13dc51",
  "receipt": {
    "to": null,
    "from": "0xd8166138Eda6dEFD2Bf2403d7637F41CE01C4BbE",
    "contractAddress": "0xAF5F031b8D5F12AD80d5E5f13C99249d82AfFfe2",
    "transactionIndex": 0,
    "gasUsed": "21360220",
    "logsBloom": "0x
    "blockHash": "0x54e22f50028221f9f7f2a16c9ad2544c0fe19eac51a60ab0e7030e8515b6fee6",
    "transactionHash": "0x6cf09ad562f1d2842fb5615534cb10d5c2610f98b371ffd40a5ebc842d13dc51",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6174177,
        "transactionHash": "0x6cf09ad562f1d2842fb5615534cb10d5c2610f98b371ffd40a5ebc842d13dc51",
        "address": "0xAF5F031b8D5F12AD80d5E5f13C99249d82AfFfe2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000d8166138eda6defd2bf2403d7637f41ce01c4bbe"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x54e22f50028221f9f7f2a16c9ad2544c0fe19eac51a60ab0e7030e8515b6fee6"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6174177,
        "transactionHash": "0x6cf09ad562f1d2842fb5615534cb10d5c2610f98b371ffd40a5ebc842d13dc51",
        "address": "0xAF5F031b8D5F12AD80d5E5f13C99249d82AfFfe2",
        "topics": [
          "0x0b11cbc9c1f60ccfdad79229add00f3dfa05137343e96ef525274af03c5d19d0"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000987b22617574686f72223a224f7069756d2e5465616d222c226465736372697074696f6e223a224554482f555344204f7261636c65204944222c226173736574223a224554482f555344222c2274797065223a226f6e636861696e222c22736f75726365223a22636861696e6c696e6b222c226c6f676963223a226e6f6e65222c2270617468223a226c6174657374416e737765722829227d0000000000000000",
        "logIndex": 1,
        "blockHash": "0x54e22f50028221f9f7f2a16c9ad2544c0fe19eac51a60ab0e7030e8515b6fee6"
      }
    ],
    "blockNumber": 6174177,
    "cumulativeGasUsed": "9150900",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x85d9c3784B277Bc10e1504Aa8f647132ba17A674",
    43200,
    "0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612",
    "0x3C14e07Edd0dC67442FA96f1Ec6999c57E810a83"
  ],
  "numDeployments": 1,
  "solcInputHash": "df026bc9c7aa2173080b8a61969131d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOracleAggregator\",\"name\":\"_oracleAggregator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_emergencyPeriod\",\"type\":\"uint256\"},{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"contract FlagsInterface\",\"name\":\"_chainlinkFlags\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"name\":\"LogMetadataSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"_callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainlinkFlags\",\"outputs\":[{\"internalType\":\"contract FlagsInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"emergencyCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleAggregator\",\"outputs\":[{\"internalType\":\"contract IOracleAggregator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract FlagsInterface\",\"name\":\"_chainlinkFlags\",\"type\":\"address\"}],\"name\":\"setChainlinkFlags\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newEmergencyPeriod\",\"type\":\"uint256\"}],\"name\":\"setEmergencyPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_callback(uint256)\":{\"notice\":\"RESOLVER \"},\"emergencyCallback(uint256,uint256)\":{\"notice\":\"Emergency callback allows to push data manually in case `emergencyPeriod` elapsed and no data were provided\"},\"getResult()\":{\"notice\":\"CHAINLINK \"},\"setPriceFeed(address)\":{\"notice\":\"GOVERNANCE \"}},\"notice\":\"Error codes: - C1 = Chainlink feeds are not being updated\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol\":\"EthUsdChainlinkL2OracleId\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/FlagsInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface FlagsInterface {\\n  function getFlag(address) external view returns (bool);\\n\\n  function getFlags(address[] calldata) external view returns (bool[] memory);\\n\\n  function raiseFlag(address) external;\\n\\n  function raiseFlags(address[] calldata) external;\\n\\n  function lowerFlags(address[] calldata) external;\\n\\n  function setRaisingAccessController(address) external;\\n}\\n\",\"keccak256\":\"0x1c43c08e51038f968848bc7823233b01c931b33f43d71eb3d81b8d37087b3ca5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/FlagsInterface.sol\\\";\\n\\nimport \\\"../interfaces/ILiveFeedOracleId.sol\\\";\\nimport \\\"../utils/OwnableWithEmergencyOracleId.sol\\\";\\n\\n/**\\n    Error codes:\\n    - C1 = Chainlink feeds are not being updated\\n */\\ncontract EthUsdChainlinkL2OracleId is ILiveFeedOracleId, OwnableWithEmergencyOracleId {\\n    // Chainlink\\n    address constant private FLAG_ARBITRUM_SEQ_OFFLINE = address(bytes20(bytes32(uint256(keccak256(\\\"chainlink.flags.arbitrum-seq-offline\\\")) - 1)));\\n    AggregatorV3Interface public priceFeed;\\n    FlagsInterface public chainlinkFlags;\\n\\n    constructor(\\n        IOracleAggregator _oracleAggregator,\\n        uint256 _emergencyPeriod,\\n        AggregatorV3Interface _priceFeed,\\n        FlagsInterface _chainlinkFlags\\n    ) OwnableWithEmergencyOracleId(_oracleAggregator, _emergencyPeriod) {\\n        priceFeed = _priceFeed;\\n        chainlinkFlags = _chainlinkFlags;\\n\\n        /*\\n        {\\n            \\\"author\\\": \\\"Opium.Team\\\",\\n            \\\"description\\\": \\\"ETH/USD Oracle ID\\\",\\n            \\\"asset\\\": \\\"ETH/USD\\\",\\n            \\\"type\\\": \\\"onchain\\\",\\n            \\\"source\\\": \\\"chainlink\\\",\\n            \\\"logic\\\": \\\"none\\\",\\n            \\\"path\\\": \\\"latestAnswer()\\\"\\n        }\\n        */\\n        emit LogMetadataSet(\\\"{\\\\\\\"author\\\\\\\":\\\\\\\"Opium.Team\\\\\\\",\\\\\\\"description\\\\\\\":\\\\\\\"ETH/USD Oracle ID\\\\\\\",\\\\\\\"asset\\\\\\\":\\\\\\\"ETH/USD\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"onchain\\\\\\\",\\\\\\\"source\\\\\\\":\\\\\\\"chainlink\\\\\\\",\\\\\\\"logic\\\\\\\":\\\\\\\"none\\\\\\\",\\\\\\\"path\\\\\\\":\\\\\\\"latestAnswer()\\\\\\\"}\\\");\\n    }\\n\\n    /** CHAINLINK */\\n    function getResult() public view override returns (uint256) {\\n        // Don't raise flag by default\\n        bool isRaised = false;\\n\\n        // Check if flags contract was set and write flag value\\n        if (address(chainlinkFlags) != address(0)) {\\n            isRaised = chainlinkFlags.getFlag(FLAG_ARBITRUM_SEQ_OFFLINE);\\n        }\\n\\n        // If flag was raised, revert\\n        if (isRaised) {\\n            revert (\\\"C1\\\");\\n        }\\n\\n        ( , int256 price, , , ) = priceFeed.latestRoundData();\\n\\n        // Data are provided with 8 decimals, adjust to 18 decimals\\n        uint256 result = uint256(price) * 1e10;\\n\\n        return result;\\n    }\\n  \\n    /** RESOLVER */\\n    function _callback(uint256 _timestamp) external override {\\n        uint256 result = getResult();\\n        __callback(_timestamp, result);\\n    }\\n\\n    /** GOVERNANCE */\\n    function setPriceFeed(AggregatorV3Interface _priceFeed) external onlyOwner {\\n        priceFeed = _priceFeed;\\n    }\\n\\n    function setChainlinkFlags(FlagsInterface _chainlinkFlags) external onlyOwner {\\n        chainlinkFlags = _chainlinkFlags;\\n    }\\n}\\n\",\"keccak256\":\"0x356b5b4f6bdbad7bcab5e45cf7b2bf1fec2a1deaefaa67bc79030b22a7cb3c76\",\"license\":\"agpl-3.0\"},\"contracts/oracles/interfaces/ILiveFeedOracleId.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\n/// @title Opium.Interface.ILiveFeedOracleId is an interface that every LiveFeed oracleId should implement\\ninterface ILiveFeedOracleId {\\n    /// @notice \\n    /// @param timestamp - Timestamp at which data are needed\\n    function _callback(uint256 timestamp) external;\\n\\n    /// @notice Returns current value of the oracle if possible, or last known value\\n    function getResult() external view returns (uint256 result);\\n\\n    // Event with oracleId metadata JSON string (for Opium derivative explorer)\\n    event LogMetadataSet(string metadata);\\n}\\n\",\"keccak256\":\"0xda29b4baf30a26605bdc4c6feffb12769f8ac0b659c3be6a60418c8260aed9b4\",\"license\":\"agpl-3.0\"},\"contracts/oracles/utils/OwnableWithEmergencyOracleId.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"opium-protocol-v2/contracts/interfaces/IOracleAggregator.sol\\\";\\n\\n/**\\n    Error codes:\\n    - O1 = Only when no data and after timestamp allowed\\n    - O2 = Only when no data and after emergency period allowed\\n */\\ncontract OwnableWithEmergencyOracleId is Ownable {\\n    // Opium\\n    IOracleAggregator public oracleAggregator;\\n\\n    // Governance\\n    uint256 public emergencyPeriod;\\n\\n    constructor(IOracleAggregator _oracleAggregator, uint256 _emergencyPeriod) {\\n        // Opium\\n        oracleAggregator = _oracleAggregator;\\n\\n        // Governance\\n        emergencyPeriod = _emergencyPeriod;\\n    }\\n\\n    /** RESOLVER */\\n    function __callback(uint256 _timestamp, uint256 _result) internal {\\n        require(\\n            !oracleAggregator.hasData(address(this), _timestamp) &&\\n            _timestamp <= block.timestamp,\\n            \\\"O1\\\"\\n        );\\n\\n        oracleAggregator.__callback(_timestamp, _result);\\n    }\\n\\n    /** GOVERNANCE */\\n    /** \\n        Emergency callback allows to push data manually in case `emergencyPeriod` elapsed and no data were provided\\n    */\\n    function emergencyCallback(uint256 _timestamp, uint256 _result) external onlyOwner {\\n        require(\\n            !oracleAggregator.hasData(address(this), _timestamp) &&\\n            _timestamp + emergencyPeriod <= block.timestamp,\\n            \\\"O2\\\"\\n        );\\n\\n        oracleAggregator.__callback(_timestamp, _result);\\n    }\\n\\n    function setEmergencyPeriod(uint256 _newEmergencyPeriod) external onlyOwner {\\n        emergencyPeriod = _newEmergencyPeriod;\\n    }\\n}\\n\",\"keccak256\":\"0x2da76919b218e6f44f494610afab6f0028c740d00472fe0d0b99767b401dca15\",\"license\":\"agpl-3.0\"},\"opium-protocol-v2/contracts/interfaces/IOracleAggregator.sol\":{\"content\":\"// SPDX-License-Identifier: agpl-3.0\\npragma solidity 0.8.5;\\n\\ninterface IOracleAggregator {\\n    function __callback(uint256 timestamp, uint256 data) external;\\n\\n    function getData(address oracleId, uint256 timestamp) external view returns (uint256 dataResult);\\n\\n    function hasData(address oracleId, uint256 timestamp) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd7cf19f6f5cb6eed55fb87b5f5f04275f575f3dbc90435bb9cb97f1277406a79\",\"license\":\"agpl-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001ae338038062001ae383398181016040528101906200003791906200028e565b8383620000596200004d6200016660201b60201c565b6200016e60201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600281905550505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0b11cbc9c1f60ccfdad79229add00f3dfa05137343e96ef525274af03c5d19d0604051620001549062000327565b60405180910390a15050505062000502565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008151905062000243816200049a565b92915050565b6000815190506200025a81620004b4565b92915050565b6000815190506200027181620004ce565b92915050565b6000815190506200028881620004e8565b92915050565b60008060008060808587031215620002ab57620002aa620003d4565b5b6000620002bb8782880162000260565b9450506020620002ce8782880162000277565b9350506040620002e18782880162000232565b9250506060620002f48782880162000249565b91505092959194509250565b60006200030f60988362000349565b91506200031c82620003d9565b60a082019050919050565b60006020820190508181036000830152620003428162000300565b9050919050565b600082825260208201905092915050565b60006200036782620003aa565b9050919050565b60006200037b826200035a565b9050919050565b60006200038f826200035a565b9050919050565b6000620003a3826200035a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f7b22617574686f72223a224f7069756d2e5465616d222c22646573637269707460008201527f696f6e223a224554482f555344204f7261636c65204944222c2261737365742260208201527f3a224554482f555344222c2274797065223a226f6e636861696e222c22736f7560408201527f726365223a22636861696e6c696e6b222c226c6f676963223a226e6f6e65222c60608201527f2270617468223a226c6174657374416e737765722829227d0000000000000000608082015250565b620004a5816200036e565b8114620004b157600080fd5b50565b620004bf8162000382565b8114620004cb57600080fd5b50565b620004d98162000396565b8114620004e557600080fd5b50565b620004f381620003ca565b8114620004ff57600080fd5b50565b6115d180620005126000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063741bef1a1161008c5780638dffe3f4116100665780638dffe3f4146101c4578063de292789146101e2578063e4440e0214610200578063f2fde38b1461021e576100cf565b8063741bef1a1461016c578063826e055f1461018a5780638da5cb5b146101a6576100cf565b80633528f4d7146100d45780634ef7b428146100f25780635ffbc77f1461010e5780637004128a1461012a578063715018a614610146578063724e78da14610150575b600080fd5b6100dc61023a565b6040516100e991906111a2565b60405180910390f35b61010c60048036038101906101079190610e8b565b610240565b005b61012860048036038101906101239190610e8b565b61025a565b005b610144600480360381019061013f9190610eb8565b6102e0565b005b61014e6104f5565b005b61016a60048036038101906101659190610e31565b61057d565b005b61017461063d565b60405161018191906110b1565b60405180910390f35b6101a4600480360381019061019f9190610e5e565b610663565b005b6101ae610723565b6040516101bb919061106d565b60405180910390f35b6101cc61074c565b6040516101d991906110e7565b60405180910390f35b6101ea610772565b6040516101f791906111a2565b60405180910390f35b6102086109b9565b60405161021591906110cc565b60405180910390f35b61023860048036038101906102339190610dd7565b6109df565b005b60025481565b600061024a610772565b90506102568282610ad7565b5050565b610262610c63565b73ffffffffffffffffffffffffffffffffffffffff16610280610723565b73ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90611142565b60405180910390fd5b8060028190555050565b6102e8610c63565b73ffffffffffffffffffffffffffffffffffffffff16610306610723565b73ffffffffffffffffffffffffffffffffffffffff161461035c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035390611142565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8384d2f30846040518363ffffffff1660e01b81526004016103b9929190611088565b60206040518083038186803b1580156103d157600080fd5b505afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190610e04565b1580156104235750426002548361042091906111f7565b11155b610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990611162565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633102e5ab83836040518363ffffffff1660e01b81526004016104bf9291906111bd565b600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050505050565b6104fd610c63565b73ffffffffffffffffffffffffffffffffffffffff1661051b610723565b73ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611142565b60405180910390fd5b61057b6000610c6b565b565b610585610c63565b73ffffffffffffffffffffffffffffffffffffffff166105a3610723565b73ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611142565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61066b610c63565b73ffffffffffffffffffffffffffffffffffffffff16610689610723565b73ffffffffffffffffffffffffffffffffffffffff16146106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d690611142565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009050600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b257600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663357e47fe60017fa438451d6458044c3c8cd2f6f31c91ac882a6d917fa1d50c2bc3074c4524952d60001c61083d91906112a7565b60001b60601c6040518263ffffffff1660e01b815260040161085f919061106d565b60206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190610e04565b90505b80156108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea90611122565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610ef8565b50505091505060006402540be400826109ae919061124d565b905080935050505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109e7610c63565b73ffffffffffffffffffffffffffffffffffffffff16610a05610723565b73ffffffffffffffffffffffffffffffffffffffff1614610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611142565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac290611102565b60405180910390fd5b610ad481610c6b565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8384d2f30846040518363ffffffff1660e01b8152600401610b34929190611088565b60206040518083038186803b158015610b4c57600080fd5b505afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190610e04565b158015610b915750428211155b610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611182565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633102e5ab83836040518363ffffffff1660e01b8152600401610c2d9291906111bd565b600060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d3e816114fa565b92915050565b600081519050610d5381611511565b92915050565b600081359050610d6881611528565b92915050565b600081359050610d7d8161153f565b92915050565b600081519050610d9281611556565b92915050565b600081359050610da78161156d565b92915050565b600081519050610dbc8161156d565b92915050565b600081519050610dd181611584565b92915050565b600060208284031215610ded57610dec611402565b5b6000610dfb84828501610d2f565b91505092915050565b600060208284031215610e1a57610e19611402565b5b6000610e2884828501610d44565b91505092915050565b600060208284031215610e4757610e46611402565b5b6000610e5584828501610d59565b91505092915050565b600060208284031215610e7457610e73611402565b5b6000610e8284828501610d6e565b91505092915050565b600060208284031215610ea157610ea0611402565b5b6000610eaf84828501610d98565b91505092915050565b60008060408385031215610ecf57610ece611402565b5b6000610edd85828601610d98565b9250506020610eee85828601610d98565b9150509250929050565b600080600080600060a08688031215610f1457610f13611402565b5b6000610f2288828901610dc2565b9550506020610f3388828901610d83565b9450506040610f4488828901610dad565b9350506060610f5588828901610dad565b9250506080610f6688828901610dc2565b9150509295509295909350565b610f7c816112db565b82525050565b610f8b81611367565b82525050565b610f9a8161138b565b82525050565b610fa9816113af565b82525050565b6000610fbc6026836111e6565b9150610fc782611407565b604082019050919050565b6000610fdf6002836111e6565b9150610fea82611456565b602082019050919050565b60006110026020836111e6565b915061100d8261147f565b602082019050919050565b60006110256002836111e6565b9150611030826114a8565b602082019050919050565b60006110486002836111e6565b9150611053826114d1565b602082019050919050565b61106781611347565b82525050565b60006020820190506110826000830184610f73565b92915050565b600060408201905061109d6000830185610f73565b6110aa602083018461105e565b9392505050565b60006020820190506110c66000830184610f82565b92915050565b60006020820190506110e16000830184610f91565b92915050565b60006020820190506110fc6000830184610fa0565b92915050565b6000602082019050818103600083015261111b81610faf565b9050919050565b6000602082019050818103600083015261113b81610fd2565b9050919050565b6000602082019050818103600083015261115b81610ff5565b9050919050565b6000602082019050818103600083015261117b81611018565b9050919050565b6000602082019050818103600083015261119b8161103b565b9050919050565b60006020820190506111b7600083018461105e565b92915050565b60006040820190506111d2600083018561105e565b6111df602083018461105e565b9392505050565b600082825260208201905092915050565b600061120282611347565b915061120d83611347565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611242576112416113d3565b5b828201905092915050565b600061125882611347565b915061126383611347565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561129c5761129b6113d3565b5b828202905092915050565b60006112b282611347565b91506112bd83611347565b9250828210156112d0576112cf6113d3565b5b828203905092915050565b60006112e682611327565b9050919050565b60008115159050919050565b6000611304826112db565b9050919050565b6000611316826112db565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061137282611379565b9050919050565b600061138482611327565b9050919050565b60006113968261139d565b9050919050565b60006113a882611327565b9050919050565b60006113ba826113c1565b9050919050565b60006113cc82611327565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4331000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f32000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f31000000000000000000000000000000000000000000000000000000000000600082015250565b611503816112db565b811461150e57600080fd5b50565b61151a816112ed565b811461152557600080fd5b50565b611531816112f9565b811461153c57600080fd5b50565b6115488161130b565b811461155357600080fd5b50565b61155f8161131d565b811461156a57600080fd5b50565b61157681611347565b811461158157600080fd5b50565b61158d81611351565b811461159857600080fd5b5056fea264697066735822122058454ea2eb1a792faff920987e8b170c60d6ffb5d5351634e0238b332ce970bf64736f6c63430008050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063741bef1a1161008c5780638dffe3f4116100665780638dffe3f4146101c4578063de292789146101e2578063e4440e0214610200578063f2fde38b1461021e576100cf565b8063741bef1a1461016c578063826e055f1461018a5780638da5cb5b146101a6576100cf565b80633528f4d7146100d45780634ef7b428146100f25780635ffbc77f1461010e5780637004128a1461012a578063715018a614610146578063724e78da14610150575b600080fd5b6100dc61023a565b6040516100e991906111a2565b60405180910390f35b61010c60048036038101906101079190610e8b565b610240565b005b61012860048036038101906101239190610e8b565b61025a565b005b610144600480360381019061013f9190610eb8565b6102e0565b005b61014e6104f5565b005b61016a60048036038101906101659190610e31565b61057d565b005b61017461063d565b60405161018191906110b1565b60405180910390f35b6101a4600480360381019061019f9190610e5e565b610663565b005b6101ae610723565b6040516101bb919061106d565b60405180910390f35b6101cc61074c565b6040516101d991906110e7565b60405180910390f35b6101ea610772565b6040516101f791906111a2565b60405180910390f35b6102086109b9565b60405161021591906110cc565b60405180910390f35b61023860048036038101906102339190610dd7565b6109df565b005b60025481565b600061024a610772565b90506102568282610ad7565b5050565b610262610c63565b73ffffffffffffffffffffffffffffffffffffffff16610280610723565b73ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90611142565b60405180910390fd5b8060028190555050565b6102e8610c63565b73ffffffffffffffffffffffffffffffffffffffff16610306610723565b73ffffffffffffffffffffffffffffffffffffffff161461035c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035390611142565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8384d2f30846040518363ffffffff1660e01b81526004016103b9929190611088565b60206040518083038186803b1580156103d157600080fd5b505afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190610e04565b1580156104235750426002548361042091906111f7565b11155b610462576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045990611162565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633102e5ab83836040518363ffffffff1660e01b81526004016104bf9291906111bd565b600060405180830381600087803b1580156104d957600080fd5b505af11580156104ed573d6000803e3d6000fd5b505050505050565b6104fd610c63565b73ffffffffffffffffffffffffffffffffffffffff1661051b610723565b73ffffffffffffffffffffffffffffffffffffffff1614610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611142565b60405180910390fd5b61057b6000610c6b565b565b610585610c63565b73ffffffffffffffffffffffffffffffffffffffff166105a3610723565b73ffffffffffffffffffffffffffffffffffffffff16146105f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f090611142565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61066b610c63565b73ffffffffffffffffffffffffffffffffffffffff16610689610723565b73ffffffffffffffffffffffffffffffffffffffff16146106df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d690611142565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009050600073ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108b257600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663357e47fe60017fa438451d6458044c3c8cd2f6f31c91ac882a6d917fa1d50c2bc3074c4524952d60001c61083d91906112a7565b60001b60601c6040518263ffffffff1660e01b815260040161085f919061106d565b60206040518083038186803b15801561087757600080fd5b505afa15801561088b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108af9190610e04565b90505b80156108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea90611122565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610ef8565b50505091505060006402540be400826109ae919061124d565b905080935050505090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109e7610c63565b73ffffffffffffffffffffffffffffffffffffffff16610a05610723565b73ffffffffffffffffffffffffffffffffffffffff1614610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5290611142565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610acb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac290611102565b60405180910390fd5b610ad481610c6b565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8384d2f30846040518363ffffffff1660e01b8152600401610b34929190611088565b60206040518083038186803b158015610b4c57600080fd5b505afa158015610b60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b849190610e04565b158015610b915750428211155b610bd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc790611182565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633102e5ab83836040518363ffffffff1660e01b8152600401610c2d9291906111bd565b600060405180830381600087803b158015610c4757600080fd5b505af1158015610c5b573d6000803e3d6000fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610d3e816114fa565b92915050565b600081519050610d5381611511565b92915050565b600081359050610d6881611528565b92915050565b600081359050610d7d8161153f565b92915050565b600081519050610d9281611556565b92915050565b600081359050610da78161156d565b92915050565b600081519050610dbc8161156d565b92915050565b600081519050610dd181611584565b92915050565b600060208284031215610ded57610dec611402565b5b6000610dfb84828501610d2f565b91505092915050565b600060208284031215610e1a57610e19611402565b5b6000610e2884828501610d44565b91505092915050565b600060208284031215610e4757610e46611402565b5b6000610e5584828501610d59565b91505092915050565b600060208284031215610e7457610e73611402565b5b6000610e8284828501610d6e565b91505092915050565b600060208284031215610ea157610ea0611402565b5b6000610eaf84828501610d98565b91505092915050565b60008060408385031215610ecf57610ece611402565b5b6000610edd85828601610d98565b9250506020610eee85828601610d98565b9150509250929050565b600080600080600060a08688031215610f1457610f13611402565b5b6000610f2288828901610dc2565b9550506020610f3388828901610d83565b9450506040610f4488828901610dad565b9350506060610f5588828901610dad565b9250506080610f6688828901610dc2565b9150509295509295909350565b610f7c816112db565b82525050565b610f8b81611367565b82525050565b610f9a8161138b565b82525050565b610fa9816113af565b82525050565b6000610fbc6026836111e6565b9150610fc782611407565b604082019050919050565b6000610fdf6002836111e6565b9150610fea82611456565b602082019050919050565b60006110026020836111e6565b915061100d8261147f565b602082019050919050565b60006110256002836111e6565b9150611030826114a8565b602082019050919050565b60006110486002836111e6565b9150611053826114d1565b602082019050919050565b61106781611347565b82525050565b60006020820190506110826000830184610f73565b92915050565b600060408201905061109d6000830185610f73565b6110aa602083018461105e565b9392505050565b60006020820190506110c66000830184610f82565b92915050565b60006020820190506110e16000830184610f91565b92915050565b60006020820190506110fc6000830184610fa0565b92915050565b6000602082019050818103600083015261111b81610faf565b9050919050565b6000602082019050818103600083015261113b81610fd2565b9050919050565b6000602082019050818103600083015261115b81610ff5565b9050919050565b6000602082019050818103600083015261117b81611018565b9050919050565b6000602082019050818103600083015261119b8161103b565b9050919050565b60006020820190506111b7600083018461105e565b92915050565b60006040820190506111d2600083018561105e565b6111df602083018461105e565b9392505050565b600082825260208201905092915050565b600061120282611347565b915061120d83611347565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611242576112416113d3565b5b828201905092915050565b600061125882611347565b915061126383611347565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561129c5761129b6113d3565b5b828202905092915050565b60006112b282611347565b91506112bd83611347565b9250828210156112d0576112cf6113d3565b5b828203905092915050565b60006112e682611327565b9050919050565b60008115159050919050565b6000611304826112db565b9050919050565b6000611316826112db565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b600061137282611379565b9050919050565b600061138482611327565b9050919050565b60006113968261139d565b9050919050565b60006113a882611327565b9050919050565b60006113ba826113c1565b9050919050565b60006113cc82611327565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4331000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f32000000000000000000000000000000000000000000000000000000000000600082015250565b7f4f31000000000000000000000000000000000000000000000000000000000000600082015250565b611503816112db565b811461150e57600080fd5b50565b61151a816112ed565b811461152557600080fd5b50565b611531816112f9565b811461153c57600080fd5b50565b6115488161130b565b811461155357600080fd5b50565b61155f8161131d565b811461156a57600080fd5b50565b61157681611347565b811461158157600080fd5b50565b61158d81611351565b811461159857600080fd5b5056fea264697066735822122058454ea2eb1a792faff920987e8b170c60d6ffb5d5351634e0238b332ce970bf64736f6c63430008050033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_callback(uint256)": {
        "notice": "RESOLVER "
      },
      "emergencyCallback(uint256,uint256)": {
        "notice": "Emergency callback allows to push data manually in case `emergencyPeriod` elapsed and no data were provided"
      },
      "getResult()": {
        "notice": "CHAINLINK "
      },
      "setPriceFeed(address)": {
        "notice": "GOVERNANCE "
      }
    },
    "notice": "Error codes: - C1 = Chainlink feeds are not being updated",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 94,
        "contract": "contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol:EthUsdChainlinkL2OracleId",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 577,
        "contract": "contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol:EthUsdChainlinkL2OracleId",
        "label": "oracleAggregator",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IOracleAggregator)709"
      },
      {
        "astId": 579,
        "contract": "contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol:EthUsdChainlinkL2OracleId",
        "label": "emergencyPeriod",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 413,
        "contract": "contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol:EthUsdChainlinkL2OracleId",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 416,
        "contract": "contracts/oracles/chainlinkL2/EthUsdChainlinkL2OracleId.sol:EthUsdChainlinkL2OracleId",
        "label": "chainlinkFlags",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(FlagsInterface)86"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(FlagsInterface)86": {
        "encoding": "inplace",
        "label": "contract FlagsInterface",
        "numberOfBytes": "20"
      },
      "t_contract(IOracleAggregator)709": {
        "encoding": "inplace",
        "label": "contract IOracleAggregator",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}